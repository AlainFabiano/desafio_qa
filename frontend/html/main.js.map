{"version":3,"sources":["./src/app/service/material.service.ts","./src/app/pages/material/material-list/material-list.component.ts","./src/app/pages/material/material-list/material-list.component.html","./src/app/utils/material-utils.ts","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/service/mensagens.alertas.service.ts","./src/app/app.module.ts","./src/app/pages/material/material-form/material-form.component.ts","./src/app/pages/material/material-form/material-form.component.html","./src/app/service/ordem.service.ts","./src/app/app-routing.module.ts","./src/app/pages/ordem-producao/ordem-list/ordem-list.component.ts","./src/app/pages/ordem-producao/ordem-list/ordem-list.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { MaterialDTO, MaterialForm } from '../model/material.model';\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class MaterialService {\r\n\r\n  private url = \"http://localhost:8080/material\"\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getMateriais(): Observable<MaterialDTO> {\r\n    return this.http.get<MaterialDTO>(this.url);\r\n  }\r\n\r\n  getMaterialPorId(id): Observable<MaterialDTO> {\r\n    return this.http.get<MaterialDTO>(this.url + \"/\" + id);\r\n  }\r\n\r\n  getMateriasPrimas(): Observable<MaterialDTO> {\r\n    return this.http.get<MaterialDTO>(this.url + \"?materiaPrima=true\");\r\n  }\r\n\r\n  postMaterial(materialForm: MaterialForm): Observable<MaterialDTO> {\r\n    return this.http.post<MaterialDTO>(this.url, materialForm);\r\n  }\r\n\r\n  putMaterial(id, materialForm: MaterialForm): Observable<MaterialDTO> {\r\n    return this.http.put<MaterialDTO>(this.url + \"/\" + id, materialForm);\r\n  }\r\n\r\n  deleteMaterial(id): Observable<String> {\r\n    return this.http.delete<String>(this.url + \"/\" + id);\r\n  }\r\n}\r\n\r\n","import { error } from '@angular/compiler/src/util';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MaterialDTO } from 'src/app/model/material.model';\r\nimport { OrdemProducaoDTO, OrdemProducaoForm } from 'src/app/model/ordem.model';\r\nimport { MaterialService } from 'src/app/service/material.service';\r\nimport { MensagensDeAlertaService } from 'src/app/service/mensagens.alertas.service';\r\nimport { OrdemService } from 'src/app/service/ordem.service';\r\nimport { MaterialUtils } from 'src/app/utils/material-utils';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\n@Component({\r\n  selector: 'app-material-list',\r\n  templateUrl: './material-list.component.html',\r\n  styleUrls: ['./material-list.component.css']\r\n})\r\nexport class MaterialListComponent implements OnInit {\r\n\r\n  constructor(private materialService: MaterialService, private ordemService: OrdemService, private router: Router) { }\r\n\r\n  responseMateriais: any;\r\n\r\n  ngOnInit(): void {\r\n    this.buscarMateriais();\r\n    \r\n  }\r\n\r\n  public excluir(idMaterial){\r\n    MensagensDeAlertaService.confirmacao('Ordem de Produção', 'Deseja realmente gerar ordem de produção para este Material?', 'warning')\r\n    .then(result => {\r\n      if (result.isConfirmed) {\r\n        this.materialService.deleteMaterial(idMaterial).subscribe(\r\n          sucesso => {\r\n            this.responseMateriais = this.responseMateriais.filter(res => res.id != idMaterial);\r\n            MensagensDeAlertaService.sucesso(\"Material deletado com sucesso!\");\r\n          }, erro => {\r\n            MensagensDeAlertaService.erro(\"Não foi possível deletar o registro, pode haver outros registro que dependam dele.\");\r\n          })\r\n      }\r\n    })\r\n    \r\n  }\r\n\r\n  public gerarOrdemDeProducao(MaterialDTO: MaterialDTO){\r\n    MensagensDeAlertaService.confirmacao('Ordem de Produção', 'Deseja realmente gerar ordem de produção para este Material?', 'warning')\r\n    .then(result => {\r\n      if (result.isConfirmed) {\r\n        const materialFormConvertido = MaterialUtils.converterMaterialDTOToForm(MaterialDTO);\r\n        const ordemProducaoForm: OrdemProducaoForm = {\r\n          materialForm: materialFormConvertido\r\n        }\r\n        this.ordemService.postOrdem(ordemProducaoForm).subscribe(\r\n          sucesso => {\r\n            this.buscarMateriais();\r\n            MensagensDeAlertaService.sucesso(\"Ordem de Produção gerada com sucesso!\");\r\n        }, erro => {         \r\n            MensagensDeAlertaService.erro(erro.error);\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  public routerPage(material = null){\r\n    if(material !== null){\r\n      this.router.navigateByUrl(\"/material-form/\" + material.id);\r\n    } else {\r\n      this.router.navigateByUrl(\"/material-form\");\r\n    }\r\n  }\r\n\r\n  buscarMateriais() {\r\n    this.materialService.getMateriais().subscribe( res => {\r\n      this.responseMateriais = res;\r\n    })\r\n  }\r\n\r\n}\r\n","<h1>Challenge Guararapes</h1>\r\n\r\n<p-table [value]=\"responseMateriais\">\r\n    <ng-template pTemplate=\"header\">\r\n        <tr>\r\n            <th>Id</th>\r\n            <th>Nome</th>\r\n            <th>Matéria-Prima</th>\r\n            <th>Estoque</th>\r\n            <th>Ações</th>\r\n        </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"body\" let-material>\r\n        <tr>\r\n          <td>{{material.id}}</td>\r\n          <td>{{material.nome}}</td>\r\n          <td>\r\n            <ul *ngFor=\"let materiaPrima of material.materiaisDeProducaoDTO\">\r\n              <li>{{materiaPrima.nome}}</li>\r\n              <li>Em estoque: {{materiaPrima.quantidadeEmEstoque}}</li>\r\n            </ul>\r\n          <td>Quantidade: {{material.quantidadeEmEstoque}}</td>\r\n          <td>\r\n            <button pButton type=\"button\" class=\"p-button-raised p-button-rounded\" icon=\"pi pi-directions\" title=\"Ordem de Produção\" (click)=\"gerarOrdemDeProducao(material)\"></button>\r\n            <button pButton type=\"button\" class=\"p-button-raised p-button-rounded\" icon=\"pi pi-pencil\" title=\"Editar\" (click)=\"routerPage(material)\"></button>\r\n            <button pButton type=\"button\" class=\"p-button-raised p-button-rounded\" icon=\"pi pi-trash\" title=\"Excluir\" (click)=\"excluir(material.id)\"></button>\r\n          </td>\r\n        </tr>\r\n    </ng-template>\r\n</p-table>\r\n\r\n<button pButton (click)=\"routerPage()\" label=\"Cadastrar Material\" type=\"button\" pRipple  class=\"p-button-secondary\"></button>\r\n<button pButton [routerLink]=\"'/ordem-list'\" label=\"Listar Ordens de Produção\" type=\"button\" pRipple  class=\"p-button-info\"></button>","\r\nimport { MaterialDTO, MaterialForm } from 'src/app/model/material.model';\r\n\r\nexport class MaterialUtils{\r\n\r\n    public static converterMaterialDTOToForm(materialDTO: MaterialDTO): MaterialForm {  \r\n        const materiaisJaconvertidos = this.converterListaDeMateriaisDTOToForm(materialDTO.materiaisDeProducaoDTO);\r\n\r\n        const materialForm : MaterialForm = {\r\n            id: materialDTO.id,\r\n            nome: materialDTO.nome,\r\n            estoqueForm: {\r\n                quantidade: materialDTO.quantidadeEmEstoque\r\n            },\r\n            materiaisDeProducaoForm: materiaisJaconvertidos\r\n        };\r\n        return materialForm;\r\n    }\r\n\r\n    public static converterListaDeMateriaisDTOToForm(materiaisDTO: MaterialDTO[]): MaterialForm[] {\r\n        let materiaisForm = [];\r\n        if(materiaisDTO == null || materiaisDTO.length == 0) {\r\n            return null;\r\n        }\r\n        \r\n        materiaisDTO.forEach(element => {\r\n            materiaisForm.push(this.converterMaterialDTOToForm(element))\r\n        })\r\n\r\n        return materiaisForm;\r\n    }  \r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'challenge-guararapes';\r\n}\r\n","<router-outlet></router-outlet>","import { Injectable } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MensagensDeAlertaService {\r\n\r\n    constructor(\r\n      ) {}\r\n\r\n      \r\n    static sucesso(subtitle: string) {\r\n        Swal.fire(\"Sucesso\", subtitle, 'success');\r\n    }\r\n\r\n    static erro(subtitle: string) {\r\n        Swal.fire(\"Erro\", subtitle, 'error');\r\n    }\r\n    \r\n    static confirmacao(title: string, text: string, icon: string) {        \r\n        return Swal.fire({\r\n            title: title,\r\n            text: text,\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Sim',\r\n            });\r\n    }\r\n\r\n}","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { TableModule } from 'primeng/table';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { PanelModule } from 'primeng/panel';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\n\r\nimport { MaterialFormComponent } from './pages/material/material-form/material-form.component';\r\nimport { MaterialListComponent } from './pages/material/material-list/material-list.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { OrdemListComponent } from './pages/ordem-producao/ordem-list/ordem-list.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MaterialFormComponent,\r\n    MaterialListComponent,\r\n    OrdemListComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    TableModule,\r\n    HttpClientModule,\r\n    ButtonModule,\r\n    FormsModule,\r\n    DropdownModule,\r\n    PanelModule,\r\n    BrowserAnimationsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { element } from 'protractor';\r\nimport { MaterialDTO, MaterialForm } from 'src/app/model/material.model';\r\nimport { MaterialService } from 'src/app/service/material.service';\r\nimport { MensagensDeAlertaService } from 'src/app/service/mensagens.alertas.service';\r\n\r\n@Component({\r\n  selector: 'app-material-form',\r\n  templateUrl: './material-form.component.html',\r\n  styleUrls: ['./material-form.component.css']\r\n})\r\nexport class MaterialFormComponent implements OnInit {\r\n\r\n  constructor(private materialService: MaterialService, private route: ActivatedRoute, private router: Router) { }\r\n\r\n  responseMateriasPrimas: any;\r\n  atualizandoRegistro: boolean = false;\r\n  \r\n  materiaPrimaSelecionada: MaterialForm;\r\n  \r\n  materialDoForm: MaterialForm = {\r\n    id: 0,\r\n    nome: '',\r\n    materiaisDeProducaoForm: [],\r\n    estoqueForm: {\r\n      quantidade: 0\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.atualizarRegistroParaEdicao();\r\n    this.buscarMateriasPrimas();\r\n  }\r\n  \r\n\r\n  adicionar(): void {\r\n    if(this.responseMateriasPrimas.length > 0 && this.materiaPrimaSelecionada != null){\r\n      this.materialDoForm.materiaisDeProducaoForm.push(this.materiaPrimaSelecionada);\r\n      this.responseMateriasPrimas = this.responseMateriasPrimas.filter(material => material.id != this.materiaPrimaSelecionada.id);\r\n      this.materiaPrimaSelecionada = this.responseMateriasPrimas[0];\r\n    }\r\n  }\r\n\r\n  remover(materialASerRemovido): void {\r\n    this.materialDoForm.materiaisDeProducaoForm = this.materialDoForm.materiaisDeProducaoForm.filter(material => material.id != materialASerRemovido.id);\r\n    this.responseMateriasPrimas = [...this.responseMateriasPrimas, materialASerRemovido];\r\n    this.materiaPrimaSelecionada = materialASerRemovido;\r\n    \r\n  }\r\n\r\n  cadastrar(): void {\r\n    this.materialService.postMaterial(this.materialDoForm).subscribe(\r\n        sucesso => {\r\n          this.buscarMateriasPrimas();\r\n          this.router.navigateByUrl(\"/material-list\");\r\n          MensagensDeAlertaService.sucesso(\"Registro cadastrado com sucesso.\");\r\n        }, erro => {\r\n          MensagensDeAlertaService.erro(\"Não foi possível cadastrar o registro.\");\r\n        });\r\n  }\r\n\r\n  atualizar(): void {\r\n    this.materialService.putMaterial(this.materialDoForm.id, this.materialDoForm).subscribe(\r\n      sucesso => {\r\n        this.router.navigateByUrl(\"/material-list\");\r\n        MensagensDeAlertaService.sucesso(\"Registro atualizado com sucesso.\");\r\n      }, erro => {\r\n        MensagensDeAlertaService.erro(\"Não foi possível atualizar o registro.\");\r\n      });\r\n  }\r\n\r\n  buscarMateriasPrimas() {\r\n    this.materialService.getMateriasPrimas().subscribe(\r\n      res => {\r\n        this.responseMateriasPrimas = res;\r\n        this.materiaPrimaSelecionada = res[0];\r\n      });\r\n  }\r\n\r\n  atualizarRegistroParaEdicao() {\r\n    const id = this.route.snapshot.paramMap.get('id');\r\n    if(id !== null){\r\n      this.atualizandoRegistro = true;\r\n      this.materialService.getMaterialPorId(id).subscribe(res => {\r\n        this.materialDoForm.id = res.id;\r\n        this.materialDoForm.nome = res.nome;\r\n        this.materialDoForm.estoqueForm.quantidade = res.quantidadeEmEstoque;\r\n        \r\n        res.materiaisDeProducaoDTO.forEach(element => {\r\n          const materialDeProducaoForm: MaterialForm = {\r\n            id: element.id,  \r\n            nome: element.nome,\r\n            materiaisDeProducaoForm: null,\r\n            estoqueForm: {\r\n              quantidade: element.quantidadeEmEstoque\r\n            }\r\n          }\r\n          this.materialDoForm.materiaisDeProducaoForm = [...this.materialDoForm.materiaisDeProducaoForm, materialDeProducaoForm]\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n}\r\n","<h1>Cadastro de Materiais</h1>\r\n\r\n<div class=\"content\">\r\n    <label for=\"nome\">Nome do Material: </label>\r\n    <input id=\"nome\" type=\"text\" pInputText [(ngModel)]=\"materialDoForm.nome\"> \r\n</div>\r\n<div class=\"content\">\r\n    <label for=\"qtd\">Quantidade em Estoque: </label>\r\n    <input id=\"qtd\" type=\"number\" pInputText [(ngModel)]=\"materialDoForm.estoqueForm.quantidade\"> \r\n</div>\r\n<div class=\"content\">\r\n    <label class=\"select\" for=\"qtd\">Matéria Prima para Procução: </label>\r\n    <p-dropdown [style]=\"{'width':'200px'}\" [options]=\"responseMateriasPrimas\" [(ngModel)]=\"materiaPrimaSelecionada\" optionLabel=\"nome\"></p-dropdown>\r\n    <button pButton label=\"Adicionar\" (click)=\"adicionar()\" type=\"button\" class=\"p-button-raised p-button-rounded\"></button>\r\n</div>\r\n\r\n<h3>Matéria Prima do Produto</h3>\r\n<p-table [value]=\"materialDoForm.materiaisDeProducaoForm\">\r\n    <ng-template pTemplate=\"header\">\r\n        <tr>\r\n            <th>Matéria-Prima</th>\r\n            <th>Quantidade em Estoque</th>\r\n            <th>Ações</th>\r\n        </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"body\" let-material>\r\n        <tr>\r\n          <td>{{material.nome}}</td>\r\n          <td>{{material.quantidadeEmEstoque}}</td>\r\n          <td>\r\n            <button pButton label=\"Excluir\" type=\"button\" class=\"p-button-raised p-button-danger\" (click)=\"remover(material)\" ></button>\r\n          </td>\r\n        </tr>\r\n    </ng-template>\r\n</p-table>\r\n\r\n<div class=\"content\">\r\n    <button *ngIf=\"!atualizandoRegistro\" pButton label=\"Cadastrar\" type=\"button\" class=\"p-button-raised p-button-secondary\" (click)=\"cadastrar()\"></button>\r\n    <button *ngIf=\"atualizandoRegistro\" pButton label=\"Atualizar\" type=\"button\" class=\"p-button-raised p-button-secondary\" (click)=\"atualizar()\"></button>\r\n    <button pButton label=\"Voltar\" type=\"button\" class=\"p-button-raised p-button-secondary\" [routerLink]=\"'/material-list'\"></button>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { MaterialDTO, MaterialForm } from '../model/material.model';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { OrdemProducaoDTO, OrdemProducaoForm } from '../model/ordem.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class OrdemService {\r\n\r\n  private url = \"http://localhost:8080/ordem\"\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getOrdens(): Observable<OrdemProducaoDTO> {\r\n    return this.http.get<OrdemProducaoDTO>(this.url);\r\n  }\r\n\r\n  getOrdemPorId(id): Observable<OrdemProducaoDTO> {\r\n    return this.http.get<OrdemProducaoDTO>(this.url + \"/\" + id);\r\n  }\r\n\r\n  postOrdem(ordemPro: OrdemProducaoForm): Observable<OrdemProducaoDTO> {\r\n    return this.http.post<OrdemProducaoDTO>(this.url, ordemPro);\r\n  }\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MaterialFormComponent } from './pages/material/material-form/material-form.component';\r\nimport { MaterialListComponent } from './pages/material/material-list/material-list.component';\r\nimport { OrdemListComponent } from './pages/ordem-producao/ordem-list/ordem-list.component';\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: MaterialListComponent},\r\n  {path: 'material-list', component: MaterialListComponent},\r\n  {path: 'material-form', component: MaterialFormComponent},\r\n  {path: 'material-form/:id', component: MaterialFormComponent},\r\n\r\n  {path: 'ordem-list', component: OrdemListComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { OrdemService } from 'src/app/service/ordem.service';\r\n\r\n@Component({\r\n  selector: 'app-ordem-list',\r\n  templateUrl: './ordem-list.component.html',\r\n  styleUrls: ['./ordem-list.component.css']\r\n})\r\nexport class OrdemListComponent implements OnInit {\r\n\r\n  constructor(private ordemService: OrdemService) { }\r\n\r\n  resOrdens: any;\r\n\r\n  ngOnInit(): void {\r\n    this.buscarOrdens()\r\n  }\r\n\r\n  buscarOrdens() {\r\n    this.ordemService.getOrdens().subscribe( res => {\r\n      this.resOrdens = res;\r\n    })\r\n  }\r\n\r\n}\r\n","<h1>Challenge Guararapes</h1>\r\n\r\n<p-table [value]=\"resOrdens\">\r\n    <ng-template pTemplate=\"header\">\r\n        <tr>\r\n            <th>Id</th>\r\n            <th>Nome do Material</th>\r\n            <th>Data/Horário</th>\r\n        </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"body\" let-ordem>\r\n        <tr>\r\n          <td>{{ordem.id}}</td>\r\n          <td>{{ordem.nomeMaterial}}</td>\r\n          <td>{{ordem.dataOrdem}}</td>\r\n        </tr>\r\n    </ng-template>\r\n</p-table>\r\n\r\n<button pButton label=\"Voltar\" type=\"button\" class=\"p-button-raised p-button-secondary\" [routerLink]=\"'/material-list'\"></button>","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}